dataset:
        #size: [640, 360]
        size: [1280, 720]
        train-dataset: "data/nuscenes-complete-15x10/train"
        valid-dataset: "data/nuscenes-complete-15x10/valid"
        test-dataset: "data/nuscenes-complete-15x10/test"

train:
        learning-rate: 0.1
        lr-decay: 0.1
        lr_decay_step_size: 3
        batch-size: 2
        weight_decay: 0.0004

        loss: "mse"
        loss-args: 
                reduction: "sum"

        epochs: 15
        validation-interval: 10
        validation-batches: 10

        logger-interval: 100

        checkpoint-interval: 1

model:
        input_channels: 4
        encoder_prec:
                out_channels: 64
                stride: 2
                kernel_size: 7
                

        encoder:
                # set False for pre-defined networks
                use_custom: True
                #encoder_name: "resnet34"
                encoder_depth: 4
                in_channels: [64, 128, 256, 512]
                out_channels: [128, 256, 512, 1024]
                kernel_size: 3
                dilation: 2

        decoder:
                decoder_depth: 4
                conv_per_block: 4
                blocks:
                        [
                                {
                                in_channels: [1024, 1024, 512, 512],
                                out_channels: [1024, 512, 512, 512],
                                kernel_size: [1, 3, 1, 1],
                                stride: 1,
                                dilation: 1,
                                activation: "relu",
                                upsampling: [40, 23],
                                apply_instance_norm: True},
                          
                                {
                                in_channels: [512, 512, 256, 256],
                                out_channels: [512, 256, 256, 256],
                                kernel_size: [1, 3, 1, 1],
                                stride: 1,
                                dilation: 1,
                                activation: "relu",
                                upsampling: [80, 45],
                                apply_instance_norm: True},
                                {
                                in_channels: [256, 256, 128, 128],
                                out_channels: [256, 128, 128, 128],
                                kernel_size: [1, 3, 1, 1],
                                stride: 1,
                                dilation: 1,
                                activation: "relu",
                                apply_instance_norm: True},
                                {
                                in_channels: [128, 128, 64, 64],
                                out_channels: [128, 64, 64, 64],
                                kernel_size: [1, 3, 1, 1],
                                stride: 1,
                                dilation: 1,
                                activation: "relu",
                                upsampling: 4,
                                apply_instance_norm: True}
                        ]
        head: 
                scale_factor: 2
                branches:

                        [{
                        in_channels: [64, 8, 8, 4],
                        out_channels: [8, 8, 4, 1],
                        kernel_sizes: [3, 3, 1, 1],
                        strides: 1,
                        padding: [1, 1, 0, 0],
                        dilation: 1,
                        batch_norm: True,
                        end_activation: "relu",
                        }]
        
                
