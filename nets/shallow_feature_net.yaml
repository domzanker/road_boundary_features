# set False for pre-defined networks
use_custom: True
input_size: [768, 448] # for 4 layer resnet: /112
input_channels: 5
encoder_prec:
        conv:
                out_channels: 32
                stride: 2
                dilation: 2
                kernel_size: 7
                dropout: 0.0
        pool:
                kernel_size: 3
                stride: 2
                padding: 1

encoder:
        encoder_depth: 3
        
        # configs for encoder blocks
        stages:
                stage_1:
                        in_channels: 32
                        out_channels: 64
                        nmbr_res_blocks: 3
                        kernel_size: 3
                        dilation: [4, 8, 0]
                        downsample_factor: 1
                        batch_norm: True
                        activation: "relu"
                        dropout: 0.0
                stage_2:
                        in_channels: 64
                        out_channels: 128
                        nmbr_res_blocks: 3
                        kernel_size: 3
                        dilation: [4, 8, 0]
                        downsample_factor: 2
                        batch_norm: True
                        activation: "relu"
                        dropout: 0.0
                stage_3:
                        in_channels: 128
                        out_channels: 256
                        nmbr_res_blocks: 3
                        kernel_size: 3
                        dilation: [4, 8, 0]
                        downsample_factor: 2
                        batch_norm: True
                        activation: "relu"
                        dropout: 0.0
decoder:
        decoder_depth: 3
        conv_per_block: 4
        stages:
                # block conv1
                stage_1:
                        upsample_indx: 0 # upsample before first conv
                        upsampling_mode: "nearest"
                        in_channels: [256, 64, 64, 128]
                        out_channels: [64, 64, 128, 128]
                        kernel_size: [1, 3, 3, 1]
                        stride: 1
                        dilation: 1
                        activation: "relu"
                        dropout: 0.0
                        apply_instance_norm: True
                stage_2:
                        upsample_indx: 0 # upsample before first conv
                        upsampling_mode: "nearest"
                        in_channels: [128, 32, 32, 64]
                        out_channels: [32, 32, 64, 64]
                        kernel_size: [1, 3, 3, 1]
                        stride: 1
                        dilation: 1
                        activation: "relu"
                        dropout: 0.0
                        apply_instance_norm: True
                stage_3:
                        upsample_indx: 0 # upsample before first conv
                        upsampling_mode: "nearest"
                        upsampling: 2
                        in_channels: [64, 32, 32, 64]
                        out_channels: [32, 32, 64, 64]
                        kernel_size: [1, 3, 3, 1]
                        stride: 1
                        dilation: 1
                        activation: "relu"
                        dropout: 0.0
                        apply_instance_norm: True
head: 
        scale_factor: 2
        branches:

                distance_branch:
                        in_channels: [64, 32, 16]
                        out_channels: [32, 16, 1]
                        kernel_sizes: [3, 3, 1]
                        strides: 1
                        dilation: 1
                        batch_norm: True
                        end_activation: "relu"
                        dropout: 0.0
                end_point_branch:
                        in_channels: [64, 32, 16]
                        out_channels: [32, 16, 1]
                        kernel_sizes: [3, 3, 1]
                        strides: 1
                        dilation: 1
                        batch_norm: True
                        end_activation: "sigmoid"
                        dropout: 0.0
                direction_branch:
                        in_channels: [64, 32, 16]
                        out_channels: [32, 16, 2]
                        kernel_sizes: [3, 3, 1]
                        strides: 1
                        dilation: 1
                        batch_norm: True
                        end_activation: "hardtanh"
                        dropout: 0.0
